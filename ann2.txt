#CLASSIFICATION
#Import the necessary libraries
import numpy as np
import pandas as pd
import seaborn as sns
import tensorflow as tf
from sklearn.model_selection import train_test_split as tts

#Reading the dataset
data=pd.read_csv('/content/healthcare-dataset-stroke-data.csv')
data.head()

#Drop the null values
data=data.dropna()
data.columns

#Displaying the first 5 rows of the dataset
df=data[['age', 'hypertension', 'heart_disease', 'avg_glucose_level', 'bmi','stroke']]
df.head()

#Label Encoder
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
df['gender']=le.fit_transform(data['gender'])
df['ever_married']=le.fit_transform(data['ever_married'])
df['work_type']=le.fit_transform(data['work_type'])
df['Residence_type']=le.fit_transform(data['Residence_type'])
df['smoking_status']=le.fit_transform(data['smoking_status'])
df.head()
data.shape
df.shape
y=df['stroke']
x=df.drop('stroke',axis=1)
x.shape
y.shape

#Countplot for stroke column
import matplotlib.pyplot as plt
sns.countplot(y)
plt.xticks([0,1],['NO','YES'])
plt.title('COUNT PLOT')

#Splitting the dataset into train and test sets
x_train,x_test,y_train,y_test=tts(x,y,test_size=0.2)

#Building an ANN model
ann=tf.keras.Sequential()
ann.add(tf.keras.layers.Dense(units=25,activation='relu'))
ann.add(tf.keras.layers.Dense(units=25,activation='relu'))
ann.add(tf.keras.layers.Dense(units=1,activation='sigmoid'))
ann.compile('adam','binary_crossentropy',metrics=['accuracy'])

#Fitting the ANN model
result=ann.fit(x_train,y_train,epochs=10)

#Confusion Matrix
from sklearn.metrics import confusion_matrix
y_pred=[]
for i in ann.predict(x_test):
  if i>0.5:
    y_pred.append(1)
  if i<0.5:
    y_pred.append(0)
confusion_matrix(y_test,y_pred)

#Displaying the Accuracy
from sklearn.metrics import accuracy_score
accuracy=accuracy_score(y_test,y_pred)
accuracy

#REGRESSION
#Import the necessary libraries
import numpy as np
import pandas as pd
import tensorflow as tf
from tensorflow.keras.layers import Dense
from tensorflow.keras import Sequential
df = pd.read_csv('/content/CarPrice_Assignment.csv').drop(['car_ID'], axis=1)
df = pd.get_dummies(df)
df.head()
x = df.drop(['price'], axis=1)
y = df.price
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3)
x_train.shape

#Model Creation
model=Sequential()
model.add(Dense(400,activation='relu',input_dim=199))
model.add(Dense(240,activation='relu'))
model.add(Dense(1))

#Model Compilation
model.compile(optimizer='Adam',loss='mean_absolute_error',metrics=['accuracy'])
hist = model.fit(x_train, y_train, epochs=10, validation_split=0.3)
pd.DataFrame(model.history.history).reset_index().plot('index',kind='line')
